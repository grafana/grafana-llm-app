{
  "name": "@grafana/llm-app",
  "version": "0.22.9",
  "private": true,
  "description": "Plugin to easily allow llm based extensions to grafana",
  "scripts": {
    "build": "webpack -c ./.config/webpack/webpack.config.ts --env production",
    "backend:build": "mage -v",
    "backend:update-sdk": "go get -u github.com/grafana/grafana-plugin-sdk-go && go mod tidy",
    "backend:test": "mage coverage",
    "backend:restart": "mage -v && echo restarting... && docker compose exec grafana pkill -HUP -f gpx_llm_linux_$(uname -m) && echo done",
    "dev": "webpack -w -c ./.config/webpack/webpack.config.ts --env development",
    "playwright:server": "docker compose -f docker-compose.yaml -f docker-compose.e2e.yaml --profile testing up playwright-server -d",
    "playwright:run": "docker compose -f docker-compose.yaml -f docker-compose.e2e.yaml --profile testing run --rm -T playwright-runner",
    "playwright:stop": "docker compose -f docker-compose.yaml -f docker-compose.e2e.yaml --profile testing down",
    "playwright:test": "GRAFANA_BASE_URL=http://grafana:3000 PW_TEST_HTML_REPORT_OPEN='never' PW_TEST_CONNECT_WS_ENDPOINT=ws://127.0.0.1:5000/ npx playwright test",
    "playwright:test-local": "PW_TEST_HTML_REPORT_OPEN='never' npx playwright test",
    "playwright:logs": "docker compose logs playwright-server",
    "playwright:logs-runner": "docker compose logs playwright-runner",
    "playwright:update-snapshots": "docker compose -f docker-compose.yaml -f docker-compose.e2e.yaml --profile testing run --rm -T playwright-runner sh -c \"npm install --legacy-peer-deps && echo 'Waiting for Grafana to be ready...' && until curl -f http://grafana:3000/api/health; do echo 'Waiting for Grafana...'; sleep 2; done && echo 'Grafana is ready! Updating snapshots...' && npx playwright test --update-snapshots\"",
    "test:e2e": "npm run server:detach && npm run playwright:run && npm run server:down",
    "test:e2e-dev": "npm run server:detach && npm run playwright:server && echo 'Playwright server started at ws://localhost:5000' && echo 'Run: npm run playwright:test' && echo 'Stop with: npm run playwright:stop && npm run server:down'",
    "test:e2e-full": "npm run build && npm run backend:build && npm run test:e2e",
    "test:e2e-ci": "DOCKER_BUILDKIT=1 COMPOSE_DOCKER_CLI_BUILD=1 npm run test:e2e-full",
    "test": "jest",
    "test:watch": "jest --watch --onlyChanged",
    "test:ci": "jest --passWithNoTests --maxWorkers 4",
    "typecheck": "tsc --noEmit",
    "lint": "eslint --cache --ext .js,.jsx,.ts,.tsx .",
    "lint:fix": "npm run lint -- --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,md}\"",
    "//": "preinstall: Builds the entire workspace when npm install is run directly in this plugin directory. This is required because CI uses shared GitHub Actions workflows that run 'npm install' from the plugin directory, but the plugin depends on other packages in this workspace that must be built first. Set SKIP_PREINSTALL=true to skip this during e2e testing to avoid npm tracker conflicts.",
    "preinstall": "if [ \"$SKIP_PREINSTALL\" != \"true\" ]; then cd ../.. && npm install --ignore-scripts && npm run build; else echo 'Skipping preinstall due to SKIP_PREINSTALL=true'; fi",
    "server": "docker compose up --build",
    "server:detach": "docker compose up --build -d",
    "server:down": "docker compose down",
    "sign": "npx --yes @grafana/sign-plugin@latest",
    "spellcheck": "cspell -c cspell.config.json \"**/*.{ts,tsx,js,go,md,mdx,yml,yaml,json,scss,css}\""
  },
  "author": "Grafana",
  "license": "Apache-2.0",
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@grafana/plugin-e2e": "^2.0.2",
    "@grafana/tsconfig": "^2.0.0",
    "@playwright/test": "^1.52.0",
    "@types/lodash": "^4.17.14",
    "@types/node": "^18.15.11",
    "@types/react-router-dom": "^5.3.3",
    "copy-webpack-plugin": "^12.0.2",
    "cspell": "8.10.4",
    "css-loader": "^7.1.2",
    "eslint-webpack-plugin": "^4.2.0",
    "fork-ts-checker-webpack-plugin": "^9.0.2",
    "glob": "^11.0.0",
    "identity-obj-proxy": "3.0.0",
    "prettier": "^3.4.2",
    "replace-in-file-webpack-plugin": "^1.0.6",
    "sass": "1.77.6",
    "sass-loader": "14.2.1",
    "style-loader": "4.0.0",
    "swc-loader": "^0.2.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "5.6.2",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1",
    "webpack-livereload-plugin": "^3.0.2"
  },
  "engines": {
    "node": ">=22"
  },
  "dependencies": {
    "@emotion/css": "^11.13.5",
    "@grafana/data": "^11.4.0",
    "@grafana/llm": "*",
    "@grafana/runtime": "^11.4.0",
    "@grafana/ui": "^11.4.0",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-router-dom": "^7.1.3",
    "react-use": "17.6.0",
    "rxjs": "7.8.2",
    "tslib": "2.8.1"
  }
}
