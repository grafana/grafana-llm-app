version: '3.0'

services:
  grafana:
    container_name: 'grafana-llm-app'
    build:
      context: ./.config
      args:
        grafana_version: ${GRAFANA_VERSION:-10.1.0}
    environment:
      AZURE_OPENAI_API_KEY: $AZURE_OPENAI_API_KEY
      GF_LOG_LEVEL: debug
      OPENAI_ORGANIZATION_ID: $OPENAI_ORGANIZATION_ID
      OPENAI_API_KEY: $OPENAI_API_KEY
      VECTOR_EMBEDDER_BASIC_AUTH_PASSWORD: $VECTOR_EMBEDDER_BASIC_AUTH_PASSWORD
      VECTOR_STORE_BASIC_AUTH_PASSWORD: $VECTOR_STORE_BASIC_AUTH_PASSWORD
    ports:
      - 3000:3000/tcp
    volumes:
      - ./dist:/var/lib/grafana/plugins/grafana-llm-app
      # For grafana/vectorapi embedder or store
      - ./provisioning/plugins/grafana-vector-api/:/etc/grafana/provisioning/plugins/
      # For openai embedder and qdrant store
      # - ./provisioning/plugins/openai-qdrant/:/etc/grafana/provisioning/plugins/

  # For openai embedder and qdrant store
  # qdrant:
  #   image: qdrant/qdrant
  #   volumes:
  #     - qdrant-storage:/qdrant/storage

  # For grafana/vectorapi embedder or store
  db:
    image: ankane/pgvector:v0.5.1
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: mysecretpassword

  # For grafana/vectorapi embedder or store
  vectorapi:
    image: grafana/vectorapi
    environment:
      PORT: 8889
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - 8889:8889
    volumes:
      - sentence-transformers:/app/.sentence_transfomers

  # Bring up the llm-gateway service. Requires the machine-learning repo to be cloned in an
  # adjacent directory. Set your OpenAI key in the .env file (see .env.example for format)
  llm-gateway:
    build:
      context: ../machine-learning/
      dockerfile: ../machine-learning/mlapi/Dockerfile
      target: development
      cache_from:
        - us.gcr.io/kubernetes-dev/mlops-api:latest
      args:
        BUILDKIT_INLINE_CACHE: "1"
    ports:
      - 4033:4033
    working_dir: /go/src/mlapi
    entrypoint:
      - "air"
    command:
      - "-c"
      - ".air.llm-gateway.toml"
    environment:
      air_wd: /go/src/mlapi
      OPENAI_API_KEY: "$OPENAI_API_KEY"
    restart: unless-stopped

volumes:
  sentence-transformers:
  # For grafana/vectorapi embedder or store
  # qdrant-storage:
