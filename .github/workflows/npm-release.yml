name: NPM Release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release a new version of the npm library'
        required: true
        default: false
        type: 'boolean'

permissions:
  contents: write
  id-token: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
        with:
          # Releases should always be made off of 'main'
          ref: 'main'
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js environment
        uses: actions/setup-node@3235b876344d2a9aa001b8d1453c930bba69e610
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Go environment
        uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639
        with:
          go-version: '1.21'

      - name: Store Go cache paths
        id: go-cache-paths
        run: echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT

      - name: Restore go-build cache
        id: restore-go-build-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-build-

      - name: Install utilities
        run: sudo apt-get install jq

      - name: Install Mage
        uses: magefile/mage-action@6f50bbb8ea47d56e62dee92392788acbc8192d0b
        with:
            install-only: true

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build:all

      - name: Run frontend tests
        run: npm run test:ci

      - name: Run backend tests
        run: npm run backend:test

      - name: Publish to NPM
        run: |
          cd packages/grafana-llm-frontend
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GRAFANABOT_NPM_TOKEN }}
